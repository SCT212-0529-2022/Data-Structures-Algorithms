#include <iostream>
#include <string>
#include <vector>

class Course {
public:
    std::string course_code;
    std::string course_name;
};

class Grade {
public:
    int mark;
    char the_grade;

    void calculateGrade() {
        if (mark > 69)
            the_grade = 'A';
        else if (mark > 59)
            the_grade = 'B';
        else if (mark > 49)
            the_grade = 'C';
        else if (mark > 39)
            the_grade = 'D';
        else
            the_grade = 'E';
    }
};

class Student {
public:
    std::string registration_number;
    std::string name;
    int age;
    Course course;
    Grade grades;

    void setDetails() {
        std::cout << "Enter Registration Number: ";
        std::cin >> registration_number;
        std::cout << "Enter Name: ";
        std::cin.ignore();
        std::getline(std::cin, name);
        std::cout << "Enter Age: ";
        std::cin >> age;
        std::cout << "Enter Course Code: ";
        std::cin >> course.course_code;
        std::cout << "Enter Course Name: ";
        std::cin.ignore();
        std::getline(std::cin, course.course_name);
    }

    void editDetails() {
        std::cout << "Edit Name: ";
        std::cin.ignore();
        std::getline(std::cin, name);
        std::cout << "Edit Age: ";
        std::cin >> age;
    }

    void addMarks() {
        std::cout << "Enter Mark: ";
        std::cin >> grades.mark;
        grades.calculateGrade();
    }

    void displayDetails() {
        std::cout << "Registration Number: " << registration_number << std::endl;
        std::cout << "Name: " << name << std::endl;
        std::cout << "Age: " << age << std::endl;
        std::cout << "Course Code: " << course.course_code << std::endl;
        std::cout << "Course Name: " << course.course_name << std::endl;
        std::cout << "Grade: " << grades.the_grade << std::endl;
    }
};

int main() {
    const int MAX_STUDENTS = 40;
    std::vector<Student> students;

    for (int i = 0; i < MAX_STUDENTS; ++i) {
        Student newStudent;
        newStudent.setDetails();
        newStudent.addMarks();
        students.push_back(newStudent);
    }

    for (const auto& student : students) {
        student.displayDetails();
        std::cout << "---------------------\n";
    }

    students[0].editDetails();

    students[0].displayDetails();

    return 0;
}
